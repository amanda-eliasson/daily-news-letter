AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function for NewsReportCreator
Parameters:
  ECRRepositoryURL:
    Type: String
    Description: URL to ecr repository for NewsReportCreator

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      PackageType: Image
      Code:
        ImageUri: !Sub ${ECRRepositoryURL}:latest
      Architectures:
        - arm64
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 300
      Timeout: 100
      FunctionName: !Sub ${AWS::StackName}

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      RoleName: !Sub ${AWS::StackName}-lambda-role
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0 1 * * ? *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: LambdaFunctionTarget
          Input: '{"recipient_emails": ["amanda_eliasson@icloud.com", "j.backsund@gmail.com"]}'


  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CloudWatchEventRule.Arn
